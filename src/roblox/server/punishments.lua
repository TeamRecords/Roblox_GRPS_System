local S={}
local DataStoreService=game:GetService('DataStoreService')
local store=DataStoreService:GetDataStore('RLE_GRPS_USERS')
local policy
local function now() return os.time() end function S.init(p) policy=p end local function readK(userId) local k=('u:%d'):format(userId) local d=store:GetAsync(k) or {} d.warn_count=d.warn_count or 0 d.banned=d.banned or false return k,d end local function writeK(k,d) store:SetAsync(k,d) end function S.incrementWarn(userId,actorId,reason) local k,d=readK(userId) d.warn_count+=1 writeK(k,d) return d.warn_count end function S.applyTrialSuspension(userId,actorId,count) local k,d=readK(userId) local days=policy.punishments.trial_days or 14 d.suspended_until=now()+days*86400 d.suspended=true writeK(k,d) return d.suspended_until end function S.applySevereBan(userId,actorId,count) local k,d=readK(userId) d.banned=true writeK(k,d) return true end function S.evaluate(userId,actorId) local _,d=readK(userId) local p=policy.punishments if d.warn_count>=(p.severe_threshold or 7) then return 'SEVERE' elseif d.warn_count>=(p.trial_threshold or 4) then return 'TRIAL' end return 'NONE' end return S
